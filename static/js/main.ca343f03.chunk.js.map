{"version":3,"sources":["addedBtn/AddedBtn.module.css","addedBtn/AddedBtn.js","filter/Filter.js","App/App.js","index.js","filter/Filter.module.css"],"names":["module","exports","AddedBtn","valueName","valueNumber","addNameContact","className","style","btnContainer","title","inputName","id","type","name","pattern","required","onChange","inputNumber","btnOn","onClick","Filter","valueFilter","container","text","input","contacts","Contacts","state","number","filter","even","setState","target","value","filterContacts","clear","undefined","find","num","toLowerCase","props","idCont","uuidv4","setTimeout","localStorage","setItem","JSON","stringify","renderContacts","alert","clearName","document","getElementById","clearNumber","length","filterEl","includes","ReactDOM","render","map","deleteContact","idDelete","prevProps","prevState","snapshot","getItem","this","parse","React","Component","App"],"mappings":"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","file":"static/js/main.ca343f03.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"AddedBtn_title__iluox\",\"btnContainer\":\"AddedBtn_btnContainer__3pqI-\",\"btnOn\":\"AddedBtn_btnOn__90rTJ\",\"valueName\":\"AddedBtn_valueName__1ZsDp\",\"valueNumber\":\"AddedBtn_valueNumber__gimil\",\"inputName\":\"AddedBtn_inputName__1KEXv\",\"inputNumber\":\"AddedBtn_inputNumber__54eet\"};","import React from 'react';\r\nimport style from './AddedBtn.module.css'\r\n\r\n\r\nconst AddedBtn = ({valueName,valueNumber,addNameContact}) => {\r\n    return (\r\n        <div className={style.btnContainer}>\r\n        <h1 className={style.title}>PhoneBook</h1>\r\n            <label className={style.valueName}>Name    \r\n            <input\r\n            className={style.inputName}\r\n            id=\"valueName\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={valueName}            \r\n            />\r\n            </label>\r\n            <label className={style.valueNumber}>Number\r\n            <input\r\n            className={style.inputNumber}\r\n            id=\"valueNumber\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={valueNumber} \r\n            />\r\n            </label>\r\n            <button className={style.btnOn} type=\"button\" onClick={addNameContact}>Add Contact</button>\r\n            </div>\r\n    )\r\n}\r\nexport default AddedBtn","import React from 'react';\r\nimport style from './Filter.module.css';\r\n\r\nconst Filter = ({valueFilter}) => {\r\n    return (\r\n        <div className={style.container}>\r\n            <h2 className={style.title}>Contacts Filter</h2>\r\n        <label className={style.text}>Find Contact by name\r\n                <input className={style.input} type=\"text\" onChange={valueFilter}/>\r\n            </label>\r\n            <ul className={style.contacts} id=\"Contacts\">  \r\n                     \r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default Filter","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport AddedBtn from '../addedBtn/AddedBtn'\r\nimport Filter from '../filter/Filter'\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        contacts: [],\r\n        name: '',\r\n        number: '',\r\n        filter: ''\r\n    };\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n         if (prevState.contacts !== localStorage.getItem('contacts')) {\r\n            localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\r\n        }\r\n        ReactDOM.render(this.state.contacts === null ? null : this.state.contacts.map(num => <li><span>{num.name}</span>: {num.number} <button type=\"button\" id={num.idCont} onClick={this.deleteContact}>Delete</button></li>), document.getElementById('Contacts'));\r\n    }\r\n    componentDidMount() {\r\n         this.setState({\r\n            contacts: JSON.parse(localStorage.getItem('contacts'))\r\n       })\r\n        setTimeout(() => {\r\n            this.renderContacts()\r\n        }, 1000)\r\n        \r\n        \r\n   }\r\n    valueName = (even) => {\r\n        this.setState({\r\n            name: even.target.value\r\n        })\r\n    }\r\n    valueNumber = (even) => {\r\n        this.setState({\r\n            number: even.target.value\r\n        })\r\n\r\n    }\r\n    valueFilter = (even) => {\r\n        this.setState({\r\n            filter: even.target.value\r\n        })\r\n        this.filterContacts();\r\n\r\n    }\r\n    addNameContact = () => {\r\n        this.clear()\r\n        if (this.state.contacts === null || this.state.contacts.find(num => num.name.toLowerCase() === this.state.name.toLowerCase()) === undefined) {\r\n\r\n        } else {\r\n            alert('Its name never used');\r\n            return\r\n        }\r\n        this.setState((state, props) => {\r\n            return {...this.state, contacts: [...this.state.contacts, { idCont: uuidv4(), name: this.state.name, number: this.state.number}]};\r\n        });\r\n        setTimeout(() => {\r\n            localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\r\n        }, 2000)\r\n        this.renderContacts();\r\n    }\r\n    clear = () => {\r\n       const clearName = document.getElementById('valueName');\r\n        const clearNumber = document.getElementById('valueNumber');\r\n        clearName.value = '';\r\n        clearNumber.value = '';\r\n    }\r\n    filterContacts = () => {\r\n        if (this.state.filter.length === 1) {\r\n            this.renderContacts()\r\n            return\r\n        }\r\n       const filterEl = this.state.contacts.filter(num => num.name.toLowerCase().includes(this.state.filter.toLowerCase()))\r\n       ReactDOM.render(filterEl.map(num => <li><span>{num.name}</span>: {num.number} <button type=\"button\" id={num.idCont} onClick={this.deleteContact}>Delete</button></li>), document.getElementById('Contacts'));\r\n    }\r\n    deleteContact = (idDelete) => {\r\n        this.setState({\r\n            contacts: this.state.contacts.filter(num => num.idCont !== idDelete.target.id)\r\n        })\r\n        setTimeout(() => {\r\n            this.renderContacts()\r\n        }, 250)\r\n    }\r\n    renderContacts = () => {\r\n        ReactDOM.render(this.state.contacts === null ? null : this.state.contacts.map(num => <li><span>{num.name}</span>: {num.number} <button type=\"button\" id={num.idCont} onClick={this.deleteContact}>Delete</button></li>), document.getElementById('Contacts'));\r\n        \r\n    }\r\n    render(){\r\n        return (\r\n            <>\r\n                <AddedBtn valueName={this.valueName} valueNumber={this.valueNumber} addNameContact={this.addNameContact}/>\r\n                <Filter valueFilter={this.valueFilter}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Contacts","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App/App'\r\nimport './style.css'\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__3yzXF\",\"text\":\"Filter_text__3YvrJ\",\"title\":\"Filter_title__2jsgL\",\"input\":\"Filter_input__38TxV\",\"contacts\":\"Filter_contacts__1xqKR\"};"],"sourceRoot":""}